---

# We only want to execute Lynis with a fresh provisioned machine, once you
# install some packages the results could change if you rerun the playbook.
- name: check if Lynis has been already executed
  stat:
    path: /var/log/lynis.log
  register: lynis_log

- name: download the Lynis tool
  get_url:
    url: https://github.com/CISOfy/lynis/archive/master.tar.gz
    dest: /tmp/lynis.tar.gz
  when: lynis_log.stat.exists == False

- name: uncompress Lynis
  unarchive:
    src: /tmp/lynis.tar.gz
    dest: /tmp
    copy: no
  when: lynis_log.stat.exists == False

- name: run Lynis
  command: ./lynis audit system
  args:
    chdir: /tmp/lynis-master
  when: lynis_log.stat.exists == False

- name: remove Lynis
  file:
    path: "{{item}}"
    state: absent
  with_items:
    - /tmp/lynis-master
    - /tmp/lynis.tar.gz
  when: lynis_log.stat.exists == False

- name: retrieve Lynis log
  fetch:
    src: /var/log/lynis.log
    dest: ../logs/{{inventory_hostname}}/lynis.log
    flat: yes

  # running it in local allows you to retrieve the original unchanged file from
  # the server if you need it.
- name: clean IPs from log
  script: clean_ips.py lynis.log -p ../logs
  delegate_to: localhost
  become: no

- name: calculate sha512 checksum of logfile
  stat:
    checksum_algorithm: sha512
    get_checksum: true
    get_attributes: false
    get_md5: false
    get_mime: false
    path: ../logs/{{inventory_hostname}}/lynis.log
  delegate_to: localhost
  become: no
  register: logfile

- name: save checksum to file
  local_action:
    copy content="{{ logfile.stat.checksum }}" dest="../logs/{{inventory_hostname}}/lynis.log.sha512"
  become: no
